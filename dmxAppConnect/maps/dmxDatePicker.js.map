{"version":3,"sources":["components/datePicker.js","components/dateRangePicker.js"],"names":["dmx","Component","extends","attributes","showdropdowns","type","Boolean","default","minyear","Number","maxyear","opens","String","dropsup","showweeknumbers","mindate","maxdate","format","invaliddates","Array","invaliddates-start","invaliddates-end","customdates","customdates-start","customdates-end","customdates-class","disableweekends","direction","weeklabel","events","show","Event","hide","apply","cancel","render","node","prototype","call","this","$","$node","on","onChange","bind","onApply","dispatchEvent","createHiddenInput","removeAttribute","autocomplete","update","input","document","createElement","name","value","$placeholder","parentNode","insertBefore","props","JSON","stringify","daterangepicker","singleDatePicker","autoUpdateInput","showWeekNumbers","showDropdowns","minYear","undefined","maxYear","drops","minDate","formatDate","maxDate","locale","weekLabel","buttonClasses","applyButtonClasses","cancelButtonClasses","isCustomDate","isInvalidDate","updateValue","data","moment","defaultValue","setValue","disabled","updateData","event","validate","nextTick","set","dirty","validity","valid","validationMessage","str","m","isValid","date","day","some","range","isInRange","filter","map","start","end","isSameOrAfter","isSameOrBefore","startDate","setStartDate","setEndDate","dateFormat","destroy","off","clickDate","e","container","find","length","initialData","startdate","enddate","autoapply","applylabel","cancellabel","separator","unlinked","maxspan-years","maxspan-months","maxspan-weeks","maxspan-days","methods","endDate","input1","input2","autoApply","linkedCalendars","maxSpan","years","months","weeks","days","applyLabel","cancelLabel"],"mappings":"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","file":"../dmxDatePicker/dmxDatePicker.js","sourcesContent":["dmx.Component('date-picker', {\r\n\r\n    extends: 'input',\r\n\r\n    attributes: {\r\n        showdropdowns: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        minyear: {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        maxyear: {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        opens: {\r\n            type: String,\r\n            default: 'right' // left, right, center\r\n        },\r\n\r\n        dropsup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        showweeknumbers: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        mindate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        maxdate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        format: {\r\n            type: String,\r\n            default: 'L'\r\n        },\r\n\r\n        invaliddates: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'invaliddates-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'invaliddates-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        customdates: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'customdates-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'customdates-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        'customdates-class': {\r\n            type: String,\r\n            default: 'class'\r\n        },\r\n\r\n        disableweekends: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        direction: {\r\n            type: String,\r\n            default: 'ltr'\r\n        },\r\n\r\n        weeklabel: {\r\n            type: String,\r\n            default: 'W'\r\n        }\r\n    },\r\n\r\n    events: {\r\n        show: Event,\r\n        hide: Event,\r\n        apply: Event,\r\n        cancel: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n\r\n        $(this.$node).on('change.daterangepicker', this.onChange.bind(this));\r\n        $(this.$node).on('apply.daterangepicker', this.onApply.bind(this));\r\n\r\n        $(this.$node).on('show.daterangepicker', this.dispatchEvent.bind(this, 'show'));\r\n        $(this.$node).on('hide.daterangepicker', this.dispatchEvent.bind(this, 'hide'));\r\n        $(this.$node).on('apply.daterangepicker', this.dispatchEvent.bind(this, 'apply'));\r\n        $(this.$node).on('cancel.daterangepicker', this.dispatchEvent.bind(this, 'cancel'));\r\n\r\n        this.createHiddenInput();\r\n\r\n        this.$node.removeAttribute('name');\r\n        this.$node.autocomplete = 'off';\r\n\r\n        this.update({});\r\n    },\r\n\r\n    createHiddenInput: function() {\r\n        this.input = document.createElement('input');\r\n        if (this.$node.name) this.input.name = this.$node.name;\r\n        this.input.value = this.$node.value;\r\n        this.input.type = 'hidden';\r\n\r\n        this.$placeholder.parentNode.insertBefore(this.input, this.$placeholder);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (JSON.stringify(props) != JSON.stringify(this.props)) {\r\n            $(this.$node).daterangepicker({\r\n                singleDatePicker: true,\r\n                autoUpdateInput: false,\r\n                showWeekNumbers: !!this.props.showweeknumbers,\r\n                showDropdowns: !!this.props.showdropdowns,\r\n                minYear: this.props.minyear || undefined,\r\n                maxYear: this.props.maxyear || undefined,\r\n                opens: this.props.opens,\r\n                drops: !!this.props.dropsup ? 'up' : 'down',\r\n                minDate: this.formatDate(this.props.mindate),\r\n                maxDate: this.formatDate(this.props.maxdate),\r\n                locale: {\r\n                    format: this.props.format,\r\n                    direction: this.props.direction,\r\n                    weekLabel: this.props.weeklabel\r\n                },\r\n                buttonClasses: '',\r\n                applyButtonClasses: '',\r\n                cancelButtonClasses: '',\r\n                isCustomDate: this.isCustomDate.bind(this),\r\n                isInvalidDate: this.isInvalidDate.bind(this)\r\n            }, this.updateValue.bind(this));\r\n\r\n            this.daterangepicker = $(this.$node).data('daterangepicker');\r\n\r\n            if (props.value !== this.props.value) {\r\n                var value = this.props.value;\r\n                if (value == 'now' || value == 'today') {\r\n                    value = moment().format('YYYY-MM-DD');\r\n                }\r\n                this.$node.defaultValue = this.formatDate(value) || '';\r\n                this.input.defaultValue = value || '';\r\n                this.setValue(value);\r\n            }\r\n\r\n            if (props.disabled != this.props.disabled) {\r\n                this.$node.disabled = this.props.disabled;\r\n                this.input.disabled = this.props.disabled;\r\n            }\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        if (event) {\r\n            dmx.validate(this.$node);\r\n        }\r\n\r\n        if (this.input.value !== this.data.value) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n\r\n        this.set('value', this.input.value);\r\n        this.set('disabled', this.$node.disabled);\r\n\r\n        if (this.$node.dirty) {\r\n            this.set('invalid', !this.$node.validity.valid);\r\n            this.set('validationMessage', this.$node.validationMessage);\r\n        }\r\n    },\r\n\r\n    formatDate: function(str) {\r\n        if (!str) return undefined;\r\n        if (str == 'now' || str == 'today') return moment().format(this.props.format);\r\n        var m = moment(str);\r\n        return m.isValid() ? m.format(this.props.format) : undefined;\r\n    },\r\n\r\n    isInvalidDate: function(date) {\r\n        if (this.props.disableweekends) {\r\n            var day = date.day();\r\n            if (day === 0 || day === 6) return true;\r\n        }\r\n\r\n        return this.props.invaliddates.some(function(range) {\r\n            return this.isInRange(date, range, this.props['invaliddates-start'], this.props['invaliddates-end']);\r\n        }, this);\r\n    },\r\n\r\n    isCustomDate: function(date) {\r\n        return this.props.customdates.filter(function(range) {\r\n            return this.isInRange(date, range, this.props['customdates-start'], this.props['customdates-end']);\r\n        }, this).map(function(range) {\r\n            return range[this.props['customdates-class']];\r\n        }, this);\r\n    },\r\n\r\n    isInRange: function(date, range, start, end) {\r\n        if (range[start] && range[end]) {\r\n            return date.isSameOrAfter(range[start]) && date.isSameOrBefore(range[end]);\r\n        }\r\n\r\n        if (range[start]) {\r\n            return date.isSameOrAfter(range[start]);\r\n        }\r\n\r\n        if (range[end]) {\r\n            return date.isSameOrBefore(range[end]);\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    onChange: function(event) {\r\n        if (!moment(this.$node.value, this.props.format).isValid()) {\r\n            this.setValue('');\r\n        }\r\n    },\r\n\r\n    onApply: function(event) {\r\n        this.updateValue(this.daterangepicker.startDate);\r\n    },\r\n\r\n    updateValue: function(date) {\r\n        this.setValue(date.format('YYYY-MM-DD'));\r\n    },\r\n\r\n    setValue: function(value) {\r\n        if (value) {\r\n            this.daterangepicker.setStartDate(this.formatDate(value));\r\n            this.daterangepicker.setEndDate(this.formatDate(value));\r\n        }\r\n        this.$node.value = this.formatDate(value) || '';\r\n        this.input.value = value || '';\r\n        this.updateData(true);\r\n    },\r\n\r\n    format: function(date) {\r\n        if (!date) return '';\r\n        return moment(date, this.dateFormat).format(this.props.format);\r\n    },\r\n\r\n    destroy: function() {\r\n        this.input.off('.daterangepicker');\r\n    }\r\n\r\n});\r\n","(function() {\r\n    // hack original clickDate method to disallow selecting range with invalid dates in it\r\n    var clickDate = daterangepicker.prototype.clickDate;\r\n    daterangepicker.prototype.clickDate = function(e) {\r\n        if (this.container.find('.in-range:not(.available)').length) return;\r\n        return clickDate.call(this, e);\r\n    };\r\n})();\r\n\r\ndmx.Component('date-range-picker', {\r\n\r\n    extends: 'date-picker',\r\n\r\n    initialData: {\r\n        start: '',\r\n        end: ''\r\n    },\r\n\r\n    attributes: {\r\n        startdate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        enddate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        autoapply: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        applylabel: {\r\n            type: String,\r\n            default: 'Apply'\r\n        },\r\n\r\n        cancellabel: {\r\n            type: String,\r\n            default: 'Cancel'\r\n        },\r\n\r\n        separator: {\r\n            type: String,\r\n            default: ' - '\r\n        },\r\n\r\n        unlinked: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'maxspan-years': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-months': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-weeks': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-days': {\r\n            type: Number,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(startDate, endDate) {\r\n            this.setValue(startDate, endDate);\r\n        }\r\n    },\r\n\r\n    createHiddenInput: function() {\r\n        dmx.Component('date-picker').prototype.createHiddenInput.call(this);\r\n\r\n        this.input1 = document.createElement('input');\r\n        if (this.$node.name) this.input1.name = this.$node.name + '_start';\r\n        this.input1.value = this.props.startDate;\r\n        this.input1.type = 'hidden';\r\n\r\n        this.input2 = document.createElement('input');\r\n        if (this.$node.name) this.input2.name = this.$node.name + '_end';\r\n        this.input2.value = this.props.startDate;\r\n        this.input2.type = 'hidden';\r\n\r\n        this.$placeholder.parentNode.insertBefore(this.input1, this.$placeholder);\r\n        this.$placeholder.parentNode.insertBefore(this.input2, this.$placeholder);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (JSON.stringify(props) != JSON.stringify(this.props)) {\r\n            $(this.$node).daterangepicker({\r\n                autoUpdateInput: false,\r\n                autoApply: !!this.props.autoapply,\r\n                linkedCalendars: !this.props.unlinked,\r\n                showWeekNumbers: !!this.props.showweeknumbers,\r\n                showDropdowns: !!this.props.showdropdowns,\r\n                minYear: this.props.minYear || undefined,\r\n                maxYear: this.props.maxYear || undefined,\r\n                opens: this.props.opens,\r\n                drops: !!this.props.dropsup ? 'up' : 'down',\r\n                minDate: this.formatDate(this.props.mindate),\r\n                maxDate: this.formatDate(this.props.maxdate),\r\n                maxSpan: this.props['maxspan-years'] || this.props['maxspan-months'] ||\r\n                         this.props['maxspan-weeks'] || this.props['maxspan-days'] ? {\r\n                    years: this.props['maxspan-years'],\r\n                    months: this.props['maxspan-months'],\r\n                    weeks: this.props['maxspan-weeks'],\r\n                    days: this.props['maxspan-days']\r\n                } : undefined,\r\n                locale: {\r\n                    format: this.props.format,\r\n                    separator: this.props.separator,\r\n                    direction: this.props.direction,\r\n                    weekLabel: this.props.weeklabel,\r\n                    applyLabel: this.props.applylabel,\r\n                    cancelLabel: this.props.cancellabel\r\n                },\r\n                buttonClasses: '',\r\n                applyButtonClasses: '',\r\n                cancelButtonClasses: '',\r\n                isCustomDate: this.isCustomDate.bind(this),\r\n                isInvalidDate: this.isInvalidDate.bind(this)\r\n            }, this.updateValue.bind(this));\r\n\r\n            this.daterangepicker = $(this.$node).data('daterangepicker');\r\n\r\n            if (props.startdate !== this.props.startdate || props.enddate !== this.props.enddate) {\r\n                var startDate = this.props.startdate;\r\n                var endDate = this.props.enddate;\r\n                if (startDate == 'now' || startDate == 'today') {\r\n                    startDate = moment().format('YYYY-MM-DD');\r\n                }\r\n                if (endDate == 'now' || endDate == 'today') {\r\n                    endDate = moment().format('YYYY-MM-DD');\r\n                }\r\n                this.$node.defaultValue = startDate && endDate ? this.formatDate(startDate) + this.props.separator + this.formatDate(endDate) : '';\r\n                this.input.defaultValue = startDate && endDate ? startDate + '/' + endDate : '';\r\n                this.input1.defaultValue = startDate || '';\r\n                this.input2.defaultValue = endDate || '';\r\n                this.setValue(startDate, endDate);\r\n            }\r\n\r\n            if (props.disabled != this.props.disabled) {\r\n                this.$node.disabled = this.props.disabled;\r\n                this.input1.disabled = this.props.disabled;\r\n                this.input2.disabled = this.props.disabled;\r\n            }\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    onApply: function(event) {\r\n        this.updateValue(this.daterangepicker.startDate, this.daterangepicker.endDate);\r\n    },\r\n\r\n    updateValue: function(startDate, endDate) {\r\n        this.setValue(startDate.format('YYYY-MM-DD'), endDate.format('YYYY-MM-DD'));\r\n    },\r\n\r\n    setValue: function(startDate, endDate) {\r\n        if (startDate) this.daterangepicker.setStartDate(this.formatDate(startDate));\r\n        if (endDate) this.daterangepicker.setEndDate(this.formatDate(endDate));\r\n        this.$node.value = startDate && endDate ? this.formatDate(startDate) + this.props.separator + this.formatDate(endDate) : '';\r\n        this.input.value = startDate && endDate ? startDate + '/' + endDate : '';\r\n        this.input1.value = startDate || '';\r\n        this.input2.value = endDate || '';\r\n        this.set('start', startDate);\r\n        this.set('end', endDate);\r\n        this.updateData(true);\r\n    }\r\n\r\n});\r\n"]}