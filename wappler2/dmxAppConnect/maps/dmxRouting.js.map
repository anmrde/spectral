{"version":3,"sources":["config/config.js","components/route.js","components/link.js"],"names":["dmx","config","mapping","Component","initialData","params","isExact","isMatch","loading","path","url","tag","attributes","type","String","default","exact","Boolean","events","error","Event","unauthorized","forbidden","notfound","render","node","this","template","document","createElement","innerHTML","$node","$parse","keys","re","pathToRegexp","props","end","xhr","XMLHttpRequest","addEventListener","onload","bind","onabort","onerror","ontimeout","update","window","location","pathname","base","querySelector","route","content","replace","match","exec","set","reduce","key","index","name","loaded","children","splice","forEach","child","$destroy","abort","open","send","parentNode","appendChild","removeChild","event","status","responseText","dispatchEvent","active","href","BaseComponent","prototype","call","navigate","routeLink","setAttribute","isActive","split","preventDefault","getAttribute","hash","history","pushState","requestUpdate","pushStateEvent","createEvent","initEvent"],"mappings":"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","file":"../dmxRouting/dmxRouting.js","sourcesContent":["dmx.config.mapping['a'] = 'link';\r\n","dmx.Component('route', {\r\n\r\n    initialData: {\r\n        params: {}, // Key/value pairs parsed from the URL corresponding to the dynamic segments of the path\r\n        isExact: false,\r\n        isMatch: false,\r\n        loading: false, // for ajax loading\r\n        path: '', // The path pattern used to match. Useful for building nested Routes\r\n        url: '' // The matched portion of the URL. Useful for building nested Links\r\n    },\r\n\r\n    tag: 'div',\r\n\r\n    attributes: {\r\n        path: {\r\n            type: String,\r\n            default: '*'\r\n        },\r\n\r\n        exact: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        url: {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    events: {\r\n        error: Event, // ajax load error\r\n        unauthorized: Event,\r\n        forbidden: Event,\r\n        notfound: Event // ajax page not found\r\n    },\r\n\r\n    render: function(node) {\r\n        //dmx.BaseComponent.prototype.render.call(this, node);\r\n\r\n        this.template = document.createElement('div');\r\n        this.template.innerHTML = this.$node.innerHTML;\r\n        this.$node.innerHTML = '';\r\n        this.$parse(this.template);\r\n\r\n        this.keys = [];\r\n        this.re = dmx.pathToRegexp(this.props.path, this.keys, {\r\n            end: this.props.exact\r\n        });\r\n\r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.addEventListener('load', this.onload.bind(this));\r\n        this.xhr.addEventListener('abort', this.onabort.bind(this));\r\n        this.xhr.addEventListener('error', this.onerror.bind(this));\r\n        this.xhr.addEventListener('timeout', this.ontimeout.bind(this));\r\n\r\n        this.update();\r\n    },\r\n\r\n    update: function() {\r\n        var path = window.location.pathname;\r\n        var base = document.querySelector('meta[name=\"ac:base\"]');\r\n        var route = document.querySelector('meta[name=\"ac:route\"]');\r\n\r\n        if (base && base.content) {\r\n            path = path.replace(base.content.replace(/\\/$/, ''), '');\r\n        }\r\n\r\n        if (route && route.content) {\r\n            path = path.replace(dmx.pathToRegexp(route.content, [], { end: false }), '').replace(/^(\\/+)?/, '/');\r\n        }\r\n\r\n        var match = this.re.exec(path);\r\n\r\n        this.set('path', this.props.path);\r\n        this.set('isExact', !!this.props.exact);\r\n        this.set('isMatch', !!match);\r\n\r\n        if (match) {\r\n            this.set('url', match[0]);\r\n            this.set('params', this.keys.reduce(function(params, key, index) {\r\n                params[key.name] = match[index + 1];\r\n                return params;\r\n            }, {}));\r\n\r\n            if (this.props.url && this.props.url != this.loaded) {\r\n                // correctly destroy old content first\r\n                this.$node.innerHTML = '';\r\n                this.children.splice(0).forEach(function(child) {\r\n                    child.$destroy();\r\n                });\r\n\r\n                this.set('loading', true);\r\n\r\n                this.loaded = this.props.url;\r\n\r\n                this.xhr.abort();\r\n\r\n                this.xhr.open('GET', this.props.url);\r\n                this.xhr.send();\r\n            } else if (!this.template.parentNode) {\r\n                this.$node.appendChild(this.template);\r\n            }\r\n        } else {\r\n            this.xhr.abort();\r\n            this.set('url', '');\r\n            this.set('params', {});\r\n            if (this.template.parentNode) {\r\n                this.$node.removeChild(this.template);\r\n            }\r\n        }\r\n    },\r\n\r\n    onload: function(event) {\r\n        this.set('loading', false);\r\n        if (this.xhr.status == 200 || this.xhr.status == 0) {\r\n            this.template.innerHTML = this.xhr.responseText;\r\n            this.$parse(this.template);\r\n            this.$node.appendChild(this.template);\r\n        } else {\r\n            if (this.xhr.status == 401) {\r\n                this.dispatchEvent('unauthorized');\r\n            } else if (this.xhr.status == 403) {\r\n                this.dispatchEvent('forbidden');\r\n            } else if (this.xhr.status == 404) {\r\n                this.dispatchEvent('notfound');\r\n            } else {\r\n                this.dispatchEvent('error');\r\n            }\r\n        }\r\n    },\r\n\r\n    onabort: function(event) {\r\n        this.set('loading', false);\r\n        //this.dispatchEvent('error');\r\n    },\r\n\r\n    onerror: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    },\r\n\r\n    ontimeout: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    }\r\n\r\n});\r\n","dmx.Component('link', {\r\n\r\n    initialData: {\r\n        active: false\r\n    },\r\n\r\n    tag: 'a',\r\n\r\n    attributes: {\r\n        href: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.$node.addEventListener('click', this.navigate.bind(this));\r\n        this.routeLink = false;\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.href != this.props.href) {\r\n            var url = this.props.href;\r\n\r\n            if (url[0] == '.' && url[1] == '/') {\r\n                var base = document.querySelector('meta[name=\"ac:base\"]');\r\n                var route = document.querySelector('meta[name=\"ac:route\"]');\r\n\r\n                if (route && route.content) {\r\n                    var path = route.content;\r\n\r\n                    if (base && base.content) {\r\n                        path = base.content.replace(/\\/$/, '') + path;\r\n                    }\r\n\r\n                    var match = dmx.pathToRegexp(path, [], { end: false }).exec(location.pathname);\r\n\r\n                    if (match) {\r\n                        this.$node.setAttribute('href', url.replace('./', match[0]));\r\n                        this.routeLink = true;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (url[0] == '#') {\r\n                this.routeLink = true;\r\n            } else {\r\n                this.routeLink = false;\r\n            }\r\n\r\n            this.$node.setAttribute('href', url);\r\n        }\r\n\r\n        this.set('active', this.isActive());\r\n    },\r\n\r\n    isActive: function() {\r\n        var url = window.location.href;\r\n        return this.$node.href == url || this.$node.href == url.split(\"?\")[0].split(\"#\")[0];\r\n    },\r\n\r\n    navigate: function(event) {\r\n        if (this.routeLink) {\r\n            event.preventDefault();\r\n\r\n            var url = this.$node.getAttribute('href');\r\n\r\n            if (url[0] == '#') {\r\n                window.location.hash = url;\r\n                return;\r\n            }\r\n\r\n            window.history.pushState(null, '', url);\r\n            \r\n            dmx.requestUpdate();\r\n\r\n            var pushStateEvent = document.createEvent('Event');\r\n            pushStateEvent.initEvent('pushstate', false, false);\r\n            window.dispatchEvent(pushStateEvent);\r\n        }\r\n    }\r\n\r\n});\r\n"]}